#!/bin/bash
exit_clean() { echo " Dihentikan"; exit 0; }
trap exit_clean SIGINT
REPOKU="https://raw.githubusercontent.com/optimus-glitch/newsc/main"
REPOSC="https://raw.githubusercontent.com/optimus-glitch/newsc/main"
biji=`date +"%Y-%m-%d" -d "$dateFromServer"`
colornow=$(cat /etc/alawivpn/theme/color.conf)
NC="\e[0m"
R='\e[1;91m'
COLOR1="$(cat /etc/alawivpn/theme/$colornow | grep -w "TEXT" | cut -d: -f2|sed 's/ //g')"
COLBG1="$(cat /etc/alawivpn/theme/$colornow | grep -w "BG" | cut -d: -f2|sed 's/ //g')"
WH='\033[1;37m'
Y='\e[0;33m'
G='\e[1;32m'
U=$COLOR1
O=$COLBG1
W=$WH
N=${NC}
ORG='\e[38;5;214m'
ipsaya=$(wget -qO- ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="${REPOKU}/registrasi.txt"
checking_sc() {
    useexp=$(curl -sS "$data_ip" | grep "$ipsaya" | awk '{print $3}')
    [[ "$date_list" > "$useexp" ]] && { systemctl stop nginx kyt xray ws-stunnel; dilarang; exit 1; }
}
checking_sc
author=$(cat /etc/profil)
lebar=54
judul="$author"
penyamaan() {
    lebar_judul=${#judul}
    peluasan=$(( (lebar - lebar_judul) /2 -1 ))
    padding=""
    for ((i=0; i<peluasan; i++)); do
        padding+=" "
    done
}
cetak_judul(){
    penyamaan
    if (( lebar_judul % 2 == 1 )); then
        printf " $U%s$N%s$W%s$N%s$U%s$N\n" "│" "$padding" "$judul" "$padding " "│"
    else
        printf " $U%s$N%s$W%s$N%s$U%s$N\n" "│" "$padding" "$judul" "$padding" "│"
    fi
}

# FUNCTIONKU
garis(){ echo -e " $U$*$N"; }
judul(){ echo -e " $O$*$N"; }
tebal(){ echo -e " $W$*$N"; }
kembali(){ read -n 1 -s -r -p " Press any key to back on menu "; exec menu; }
#———————————————————————————————————————————
# VARIABEL LETAKKAN DI SINI BY ALAWIVPN

IP=$(curl -sS ipv4.icanhazip.com)
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
domain=$(cat /etc/xray/domain)
author=$(cat /etc/profil)
TIMES="10"
CHATID=$(cat /etc/per/id)
KEY=$(cat /etc/per/token)
URL="https://api.telegram.org/bot$KEY/sendMessage"
CHATID2=$(cat /etc/perlogin/id)
KEY2=$(cat /etc/perlogin/token)
URL2="https://api.telegram.org/bot$KEY2/sendMessage"
#———————————————————————————————————————————
cd
if [ ! -e /etc/xray/sshx/akun ]; then
	mkdir -p /etc/xray/sshx/akun
fi
function usernew(){
	clear
	echo
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│${N}${O}               ${W}● SSH PANEL MENU ●                ${N}${U}│ ${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	until [[ $Login =~ ^[a-zA-Z0-9_.-]+$ && ${CLIENT_EXISTS} == '0' ]]; do
		read -p "  Input Username : " Login
		CLIENT_EXISTS=$(grep -w $Login /etc/xray/ssh | wc -l)
		if [[ ${CLIENT_EXISTS} == '1' ]]; then
			clear
			echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
			echo -e " ${U}│${N}${O}               ${W}● SSH PANEL MENU ●                ${N}${U}│ ${N}"
			echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
			echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
			echo -e " ${U}│                                                 │"
			echo -e " ${U}│${W} Nama Duplikat Silahkan Buat Nama Lain.          ${U}│"
			echo -e " ${U}│                                                 │"
			echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
			read -n 1 -s -r -p "  Press any key to back"
			usernew
		fi
	done
	read -p "  Input Password : " Pass
	until [[ $masaaktif =~ ^[0-9]+$ ]]; do
		read -p "  Expired (days) : " masaaktif
	done
	until [[ $iplim =~ ^[0-9]+$ ]]; do
		read -p "  Limit User (IP): " iplim
	done
	if [ ! -e /etc/xray/sshx ]; then
		mkdir -p /etc/xray/sshx
	fi
	if [ -z ${iplim} ]; then
		iplim="0"
	fi
	echo "${iplim}" >/etc/xray/sshx/${Login}IP
	if [[ -e /etc/cloudfront ]]; then
		cloudfront=$(cat /etc/cloudfront)
	else
		cloudfront="-"
	fi
	sleep 1
	clear
	expi=$(date -d "+$masaaktif days" +"%Y-%m-%d")
	useradd -e $(date -d "+$masaaktif days" +"%Y-%m-%d") -s /bin/false -M $Login
	exp=$(chage -l $Login | grep "Account expires" | awk -F": " '{print $2}')
	echo -e "$Pass\n$Pass\n" | passwd $Login &> /dev/null
	expi=$(date -d "$exp" +"%Y-%m-%d")
	echo -e "### $Login $expi $Pass" >> /etc/xray/ssh
    urut "/etc/xray/ssh"
	cat > /home/vps/public_html/ssh-$Login.txt <<-END
-------------------------------------------
Format SSH OVPN Account
-------------------------------------------
Username         : $Login
Password         : $Pass
Expired          : $expi
-------------------------------------------
Host             : $domain
ISP              : $ISP
CITY             : $CITY
Login Limit      : ${iplim} IP
Port OpenSSH     : 22
Port Dropbear    : 143, 109
Port SSH WS      : 80, 8080
Port SSH SSL WS  : 443
Port SSL/TLS     : 8443, 8880
Port OVPN WS SSL : 2086
Port OVPN SSL    : 990
Port OVPN TCP    : 1194
Port OVPN UDP    : 2200,
BadVPN UDP       : 7100, 7300, 7300
-------------------------------------------
SSH UDP VIRAL    : $domain:1-65535@$Login:$Pass
-------------------------------------------
HTTP COSTUM      : $domain:80@$Login:$Pass
-------------------------------------------
Payload WS/WSS   :
GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]
-------------------------------------------
OpenVPN SSL      : http://$domain:89/ssl.ovpn
OpenVPN TCP      : http://$domain:89/tcp.ovpn
OpenVPN UDP      : http://$domain:89/udp.ovpn
-------------------------------------------
END
	if [[ -e /etc/cloudfront ]]; then
TEXT="
════════════════════
      ☘ SSH Premium Account ☘
════════════════════
<code>Username         :</code>  <code>$Login</code>
<code>Password         :</code>  <code>$Pass</code>
<code>Expired On       :</code>  $expi
════════════════════
<code>ISP              :</code>  $ISP
<code>CITY             :</code>  $CITY
<code>Host             :</code>  <code>$domain</code>
<code>Login Limit      :</code>  ${iplim} IP
<code>Port OpenSSH     :</code>  22
<code>Port Dropbear    :</code>  109, 143
<code>Port SSH WS      :</code>  80, 8080
<code>Port SSH SSL WS  :</code>  443
<code>Port SSL/TLS     :</code>  8443,8880
<code>Port OVPN WS SSL :</code>  2086
<code>Port OVPN SSL    :</code>  990
<code>Port OVPN TCP    :</code>  1194
<code>Port OVPN UDP    :</code>  2200
<code>Proxy Squid      :</code>  3128
<code>BadVPN UDP       :</code>  7100, 7300, 7300
════════════════════
<code>SSH UDP VIRAL    :</code> <code>$domain:1-65535@$Login:$Pass</code>
════════════════════
<code>HTTP COSTUM WS   :</code> <code>$domain:80@$Login:$Pass</code>
════════════════════
<code>Payload WS/WSS   :</code>
<code>GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]</code>
════════════════════
<code>OpenVPN SSL      :</code>  http://$domain:89/ssl.ovpn
<code>OpenVPN TCP      :</code>  http://$domain:89/tcp.ovpn
<code>OpenVPN UDP      :</code>  http://$domain:89/udp.ovpn
════════════════════
<code>Save Link Account:</code> http://$domain:89/ssh-$Login.txt
════════════════════
$author
════════════════════
"
	else
TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>      ☘ SSH Premium Account ☘</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>Username    :</code> <code>$Login</code>
<code>Password    :</code> <code>$Pass</code>
<code>Expired On  :</code> <code>$expi</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>ISP         :</code> <code>$ISP</code>
<code>CITY        :</code> <code>$CITY</code>
<code>Host        :</code> <code>$domain</code>
<code>Login Limit :</code> <code>${iplim} IP</code>
<code>OpenSSH     :</code> <code>22</code>
<code>Dropbear    :</code> <code>109, 143</code>
<code>SSH WS      :</code> <code>80, 8080</code>
<code>SSH SSL WS  :</code> <code>443</code>
<code>SSL/TLS     :</code> <code>8443, 8880</code>
<code>OVPN WS SSL :</code> <code>2086</code>
<code>OVPN SSL    :</code> <code>990</code>
<code>OVPN TCP    :</code> <code>1194</code>
<code>OVPN UDP    :</code> <code>2200</code>
<code>Proxy Squid :</code> <code>3128</code>
<code>BadVPN UDP  :</code> <code>7100, 7300, 7300</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>SSH UDP     :</code> <code>$domain:1-65535@$Login:$Pass</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>HTTP CUSTOM :</code> <code>$domain:80@$Login:$Pass</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>Payload WS/WSS :</code>
<code>GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>OpenVPN SSL :</code> http://$domain:89/ssl.ovpn
<code>OpenVPN TCP :</code> http://$domain:89/tcp.ovpn
<code>OpenVPN UDP :</code> http://$domain:89/udp.ovpn
━━━━━━━━━━━━━━━━━━━━━━━
<code>Link Account:</code> http://$domain:89/ssh-$Login.txt
━━━━━━━━━━━━━━━━━━━━━━━
<b>$author</b>
━━━━━━━━━━━━━━━━━━━━━━━

"
	fi
	curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
	cd
	if [ ! -e /etc/tele ]; then
		echo -ne
	else
		echo "$TEXT" > /etc/notiftele
		bash /etc/tele
	fi
	user2=$(echo "$Login" | cut -c 1-3)
	TIME2=$(date +'%Y-%m-%d %H:%M:%S')
	TEXT2="
━━━━━━━━━━━━━━━━━━━━━━━
<b>       ☘ SSH PREMIUM SOLD ☘</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>Order   :</code> <code>SSH Premium</code>
<code>User    :</code> <code>${user2}⬤⬤⬤</code>
<code>Domain  :</code> <code>${domain}</code>
<code>ISP     :</code> <code>$ISP</code>
<code>City    :</code> <code>$CITY</code>
<code>Date    :</code> <code>${TIME2} WIB</code>
<code>Limit   :</code> <code>${iplim} IP</code>
<code>Durasi  :</code> <code>$masaaktif Hari </code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Notif Pembelian Akun Ssh..</i>"
	curl -s --max-time $TIMES -d "chat_id=$CHATID2&disable_web_page_preview=1&text=$TEXT2&parse_mode=html" $URL2 >/dev/null
	clear
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "● SSH Premium Account  ● " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Username   : $Login"  | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Password   : $Pass" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Expired On : $expi"  | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "ISP        : $ISP" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "City       : $CITY" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Host       : $domain" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Login Limit: ${iplim} IP" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OpenSSH    : 22" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Dropbear   : 109, 143" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "SSH-WS     : 80,8080" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "SSH-SSL-WS : 443" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "SSL/TLS    : 8443,8880" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Ovpn Ws    : 2086" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Port TCP   : 1194" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Port UDP   : 2200,1-65535" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Port SSL   : 990" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OVPN TCP   : http://$domain:89/tcp.ovpn" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OVPN UDP   : http://$domain:89/udp.ovpn" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OVPN SSL   : http://$domain:89/ssl.ovpn" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "UDPGW      : 7100-7300" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "UDP VIRAL: $domain:1-65535@$Login:$Pass" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "HTTP COSTUM: $domain:80@$Login:$Pass" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Payload WS/WSS: " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Save Link Acount    : " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "http://$domain:89/ssh-$Login.txt " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "  ● $author ●                  " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo "" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	bottelegram > /dev/null 2>&1 &
	read -n 1 -s -r -p " Press any key to back on menu"
	exec $0 && exit 1
}

# TRIAL SSH
function trial(){
	clear
	domain=`cat /etc/xray/domain`
	TIMES="10"
	CHATID=$(cat /etc/per/id)
	KEY=$(cat /etc/per/token)
	URL="https://api.telegram.org/bot$KEY/sendMessage"
	ISP=$(cat /etc/xray/isp)
	CITY=$(cat /etc/xray/city)
	author=$(cat /etc/profil)
	clear
	IP=$(curl -sS ipv4.icanhazip.com)
	cd
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│${N}${O}             ${W}● TRIAL SSH ACCOUNT ●               ${N}${U}│ ${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e ""
	until [[ $timer =~ ^[0-9]+$ ]]; do
		read -p "  Expired (Minutes): " timer
	done
	Login=Trial-`</dev/urandom tr -dc X-Z0-9 | head -c4`
	hari=0
	Pass=1
	iplim=1
	if [ ! -e /etc/xray/sshx ]; then
		mkdir -p /etc/xray/sshx
	fi
	if [ -z ${iplim} ]; then
		iplim="0"
	fi
	if [[ -e /etc/cloudfront ]]; then
		cloudfront=$(cat /etc/cloudfront)
	else
		cloudfront="Kosong"
	fi

	echo "$iplim" > /etc/xray/sshx/${Login}IP
	ecp=$(date -d "+$timer minutes" +"%Y-%m-%d %H:%M:%S")
	expi=$(echo $ecp | awk '{print $1}')
	useradd -e $expi -s /bin/false -M $Login
	exp="$(chage -l $Login | grep 'Account expires' | awk -F': ' '{print $2}')"
	echo -e "$Pass\n$Pass\n" | passwd $Login &> /dev/null
	echo -e "### $Login $ecp $Pass" >> /etc/xray/ssh
    urut "/etc/xray/ssh"
	cat > /home/vps/public_html/ssh-$Login.txt <<-END
-------------------------------------------
Format SSH OVPN Account
-------------------------------------------
Username         : $Login
Password         : $Pass
Expired          : $ecp
-------------------------------------------
Host             : $domain
ISP              : $ISP
CITY             : $CITY
Login Limit      : ${iplim} IP
Port OpenSSH     : 22
Port Dropbear    : 143, 109
Port SSH WS      : 80, 8080
Port SSH SSL WS  : 443
Port SSL/TLS     : 8443, 8880
Port OVPN WS SSL : 2086
Port OVPN SSL    : 990
Port OVPN TCP    : 1194
Port OVPN UDP    : 2200,
BadVPN UDP       : 7100, 7300, 7300
-------------------------------------------
SSH UDP VIRAL : $domain:1-65535@$Login:$Pass
-------------------------------------------
HTTP COSTUM : $domain:80@$Login:$Pass
-------------------------------------------
Payload WS/WSS   :
GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]
-------------------------------------------
OpenVPN SSL      : http://$domain:89/ssl.ovpn
OpenVPN TCP      : http://$domain:89/tcp.ovpn
OpenVPN UDP      : http://$domain:89/udp.ovpn
-------------------------------------------
END
	if [[ -e /etc/cloudfront ]]; then
		TEXT="
════════════════════
Trial SSH Premium Account
════════════════════
Username         :  <code>$Login</code>
Password         :  <code>$Pass</code>
Expired On       :  $timer Minutes
════════════════════
ISP              :  $ISP
CITY             :  $CITY
Host             :  <code>$domain</code>
Login Limit      :  ${iplim} IP
Port OpenSSH     :  22
Port Dropbear    :  109, 143
Port SSH WS      :  80, 8080
Port SSH SSL WS  :  443
Port SSL/TLS     :  8443,8880
Port OVPN WS SSL :  2086
Port OVPN SSL    :  990
Port OVPN TCP    :  1194
Port OVPN UDP    :  2200
Proxy Squid      :  3128
BadVPN UDP       :  7100, 7300, 7300
════════════════════
SSH UDP VIRAL : <code>$domain:1-65535@$Login:$Pass</code>
════════════════════
HTTP COSTUM WS : <code>$domain:80@$Login:$Pass</code>
════════════════════
Payload WS/WSS   :
<code>GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]</code>
════════════════════
OpenVPN SSL      :  http://$domain:89/ssl.ovpn
OpenVPN TCP      :  http://$domain:89/tcp.ovpn
OpenVPN UDP      :  http://$domain:89/udp.ovpn
════════════════════
Save Link Account: http://$domain:89/ssh-$Login.txt
════════════════════
$author
════════════════════
"
	else
		TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b> ☘️ Trial Premium SSH Account ☘️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>Username    :</code> <code>$Login</code>
<code>Password    :</code> <code>$Pass</code>
<code>Expired On  :</code> <code>$ecp</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>ISP         :</code> <code>$ISP</code>
<code>CITY        :</code> <code>$CITY</code>
<code>Host        :</code> <code>$domain</code>
<code>Login Limit :</code> <code>${iplim} IP</code>
<code>OpenSSH     :</code> <code>22</code>
<code>Dropbear    :</code> <code>109, 143</code>
<code>SSH WS      :</code> <code>80, 8080</code>
<code>SSH SSL WS  :</code> <code>443</code>
<code>SSL/TLS     :</code> <code>8443, 8880</code>
<code>OVPN WS SSL :</code> <code>2086</code>
<code>OVPN SSL    :</code> <code>990</code>
<code>OVPN TCP    :</code> <code>1194</code>
<code>OVPN UDP    :</code> <code>2200</code>
<code>Proxy Squid :</code> <code>3128</code>
<code>BadVPN UDP  :</code> <code>7100, 7300, 7300</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>SSH UDP     :</code> <code>$domain:1-65535@$Login:$Pass</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>HTTP CUSTOM :</code> <code>$domain:80@$Login:$Pass</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>Payload WS/WSS :</code>
<code>GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]</code>
━━━━━━━━━━━━━━━━━━━━━━━
<code>OpenVPN SSL :</code> http://$domain:89/ssl.ovpn
<code>OpenVPN TCP :</code> http://$domain:89/tcp.ovpn
<code>OpenVPN UDP :</code> http://$domain:89/udp.ovpn
━━━━━━━━━━━━━━━━━━━━━━━
<code>Link Account:</code> http://$domain:89/ssh-$Login.txt
━━━━━━━━━━━━━━━━━━━━━━━
<b>$author</b>
━━━━━━━━━━━━━━━━━━━━━━━
"
	fi
	curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
	cd
	if [ ! -e /etc/tele ]; then
		echo -ne
	else
		echo "$TEXT" > /etc/notiftele
		bash /etc/tele
	fi
	clear
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "● Trial SSH Premium Account ● " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Username   : $Login"  | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Password   : $Pass" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Expired On : $ecp"  | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "ISP        : $ISP" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "City       : $CITY" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Host       : $domain" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Login Limit: ${iplim} IP" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OpenSSH    : 22" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Dropbear   : 109, 143" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "SSH-WS     : 80,8080" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "SSH-SSL-WS : 443" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "SSL/TLS    : 8443,8880" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Ovpn Ws    : 2086" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Port TCP   : 1194" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Port UDP   : 2200,1-65535" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Port SSL   : 990" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OVPN TCP   : http://$domain:89/tcp.ovpn" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OVPN UDP   : http://$domain:89/udp.ovpn" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "OVPN SSL   : http://$domain:89/ssl.ovpn" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "UDPGW      : 7100-7300" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "UDP VIRAL: $domain:1-65535@$Login:$Pass" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "HTTP COSTUM: $domain:80@$Login:$Pass" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Payload WS/WSS: " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "Save Link Acount    : " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "http://$domain:89/ssh-$Login.txt " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "● $author ●                  " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo -e "━━━━━━━━━━━━━━━━━━━━━━━ " | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	echo "" | tee -a /etc/xray/sshx/akun/log-create-${Login}.log
	read -n 1 -s -r -p " Press any key to back on menu"
	exec $0 && exit 1
}

# RENEW SSH
function renew(){
	clear
	TIMES="10"
	CHATID=$(cat /etc/per/id)
	KEY=$(cat /etc/per/token)
	URL="https://api.telegram.org/bot$KEY/sendMessage"
	ISP=$(cat /etc/xray/isp)
	CITY=$(cat /etc/xray/city)
	domain=$(cat /etc/xray/domain)
	NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/xray/ssh")
	if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
		clear
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│${N}${O}                ${W}● RENEW USERS ●                  ${N}${U}│${N}"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│                                                 │"
		echo -e " ${U}│${W} User Tidak Ada!                              ${U}   │"
		echo -e " ${U}│                                                 │"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo ""
		read -n 1 -s -r -p "  Press any key to back on menu"
		exec $0 && exit 1
	fi
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│${N}${O}                 ${W}● RENEW USERS ●                 ${N}${U}│${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│ ${W}Silahkan pilih user yang mau direnew${U}            │"
	echo -e " ${U}│ ${W}Ketik [0] kembali ke menu${U}                       │"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	printf "   %-5s%-15s%-15s\n" "NO." "NAMA" "EXPIRED"
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2-3 | nl -s ') ' |awk -v OFS="\t" '{ printf "   %-5s%-15s%-15s\n", $1, $2, $3 '}
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
		if [[ ${NUMBER_OF_CLIENTS} == '1' ]]; then
			read -rp "  Select one client [1]: " CLIENT_NUMBER
            if [[ ${CLIENT_NUMBER} == '0' ]]; then
                exec $0 && exit 1
            fi
		else
			read -rp "  Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
			if [[ ${CLIENT_NUMBER} == '0' ]]; then
				exec $0 && exit 1
			fi
		fi
	done
	User=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
	exp=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 3 | sed -n "${CLIENT_NUMBER}"p)
	Pass=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 4 | sed -n "${CLIENT_NUMBER}"p)
	egrep "^$User" /etc/passwd >/dev/null
	if [ $? -eq 0 ]; then
		read -p "  Days Extend: " Days
		now=$(date +%Y-%m-%d)
		d1=$(date -d "$exp" +%s)
		d2=$(date -d "$now" +%s)
		exp2=$(( (d1 - d2) / 86400 ))
		exp3=$(($exp2 + $Days))
		exp4=`date -d "$exp3 days" +"%Y-%m-%d"`
		passwd -u $User
		usermod -e  $exp4 $User
		egrep "^$User" /etc/passwd >/dev/null
		echo -e "$Pass\n$Pass\n"|passwd $User &> /dev/null
		sed -i "s/### $User $exp/### $User $exp4/g" /etc/xray/ssh >/dev/null
		clear
		TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>     ☘️ RENEW SSH ACCOUNT ☘️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>User    :</code> <code>$User</code>
<code>Domain  :</code> <code>${domain}</code>
<code>ISP     :</code> <code>$ISP</code>
<code>CITY    :</code> <code>$CITY</code>
<code>Expired :</code> <code>$exp4</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Succes Renew This Account..</i>
"
		curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
		cd
		if [ ! -e /etc/tele ]; then
			echo -ne
		else
			echo "$TEXT" > /etc/notiftele
			bash /etc/tele
		fi
		user2=$(echo "$User" | cut -c 1-3)
		TIME2=$(date +'%Y-%m-%d %H:%M:%S')
		TEXT2="
━━━━━━━━━━━━━━━━━━━━━━━
<b>       ☘ SSH PREMIUM SOLD ☘</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>Order   :</code> <code>SSH Premium</code>
<code>User    :</code> <code>${user2}⬤⬤⬤ </code>
<code>Domain  :</code> <code>${domain} </code>
<code>ISP     :</code> <code>$ISP </code>
<code>City    :</code> <code>$CITY </code>
<code>Date    :</code> <code>${TIME2} WIB</code>
<code>Durasi  :</code> <code>$Days Hari </code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Renew Account From Server..</i>
"
		curl -s --max-time $TIMES -d "chat_id=$CHATID2&disable_web_page_preview=1&text=$TEXT2&parse_mode=html" $URL2 >/dev/null
		clear
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│$O                 ● RENEW USERS ●                 $N$U│"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│ ${W}Username   : $User"
		echo -e " ${U}│ ${W}Days Added : $Days Days"
		echo -e " ${U}│ ${W}Expired on : $exp4"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	fi
	bottelegram > /dev/null 2>&1 &
	read -n 1 -s -r -p "  Press any key to back on menu"
	exec $0 && exit 1
}

# DELETE SSH
function hapus(){
	NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/xray/ssh")
	if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
		clear
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│${N}${O}                 ${W}● DELETE USERS ●                ${N}${U}│${N}"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│                                                 │"
		echo -e " ${U}│${W} User Tidak Ada!                              ${U}   │"
		echo -e " ${U}│                                                 │"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo ""
		read -n 1 -s -r -p "  Press any key to back on menu"
		exec $0 && exit 1
	fi
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│${N}${O}                 ${W}● DELETE USERS ●                ${N}${U}│${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│ ${W}Silahkan Pilih User Yang Mau Didelete     ${U}      │"
	echo -e " ${U}│ ${W}Ketik [0] kembali ke menu                     ${U}  │"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	printf "   %-5s%-15s%-15s\n" "NO." "NAMA" "EXPIRED"
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2-3 | nl -s ') ' |awk -v OFS="\t" '{ printf "   %-5s%-15s%-15s\n", $1, $2, $3 '}
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
		if [[ ${NUMBER_OF_CLIENTS} == '1' ]]; then
			read -rp "  Select one client [1]: " CLIENT_NUMBER
            if [[ ${CLIENT_NUMBER} == '0' ]]; then
                exec $0 && exit 1
            fi
		else
			read -rp "  Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
			if [[ ${CLIENT_NUMBER} == '0' ]]; then
				exec $0 && exit 1
			fi
		fi
	done
	Pengguna=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
	Days=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 3 | sed -n "${CLIENT_NUMBER}"p)
	Pass=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 4 | sed -n "${CLIENT_NUMBER}"p)
    echo "### $Pengguna $Days $Pass" >> /etc/xray/sshx/akundelete
    urut "/etc/xray/sshx/akundelete"
	sed -i "/^### $Pengguna $Days $Pass/d" /etc/xray/ssh
	rm /home/vps/public_html/ssh-$Pengguna.txt >/dev/null 2>&1
	rm /etc/xray/sshx/${Pengguna}IP >/dev/null 2>&1
	rm /etc/xray/sshx/${Pengguna}login >/dev/null 2>&1
	if getent passwd $Pengguna > /dev/null 2>&1; then
		userdel $Pengguna > /dev/null 2>&1
		echo -e "  User $Pengguna was removed."
	else
		echo -e "  Failure: User $Pengguna Not Exist."
	fi
	TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>    ☘️ SSH ACCOUNT DELETED ☘️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>User    :</code> <code>$Pengguna</code>
<code>Domain  :</code> <code>${domain}</code>
<code>ISP     :</code> <code>$ISP</code>
<code>CITY    :</code> <code>$CITY</code>
<code>Expired :</code> <code>$Days</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Succes Delete This User...</i>
"
	curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
	cd
	if [ ! -e /etc/tele ]; then
		echo -ne
	else
		echo "$TEXT" > /etc/notiftele
		bash /etc/tele
	fi
	read -n 1 -s -r -p "  Press any key to back on menu"
	exec $0 && exit 1
}

# CEK SSH
function cekconfig(){
	ISP=$(cat /etc/xray/isp)
	CITY=$(cat /etc/xray/city)
	author=$(cat /etc/profil)
	IP=$(curl -sS ipv4.icanhazip.com);
	domain=`cat /etc/xray/domain`
	NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/xray/ssh")
	if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
		clear
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│${N}${O}                 ${W}● USER CONFIG ●                 ${N}${U}│${N}"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
		echo -e " ${U}│                                                 │"
		echo -e " ${U}│${W} User Tidak Ada!                              ${U}   │"
		echo -e " ${U}│                                                 │"
		echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
		echo ""
		read -n 1 -s -r -p "  Press any key to back on menu"
		exec $0 && exit 1
	fi
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│${N}${O}                 ${W}● USER CONFIG ●                 ${N}${U}│${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U}│ ${W}Silahkan Pilih User Yang Mau Dicek     ${U}         │"
	echo -e " ${U}│ ${W}Ketik [0] kembali ke menu                    ${U}   │"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	printf "   %-5s%-15s%-15s%-15s\n" "NO." "NAMA" "EXPIRED" "JAM/SANDI"
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
#	grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2-4 | nl -s ') ' |awk -v OFS="\t" '{ printf "   %-5s%-15s%-15s%s\n", $1, $2, $3, $4 '}
    grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2-4 | nl -s ') ' | while read -r line; do
        number=$(echo "$line" | cut -d')' -f 1 | xargs)
        Login=$(echo "$line" | cut -d' ' -f 2)
        expired=$(echo "$line" | cut -d' ' -f 3)
        jamsan=$(echo "$line" | cut -d' ' -f 4)
        skrg=$(date +%Y-%m-%d)
        diff=$(( ($(date -d "$expired" +%s) - $(date -d "$skrg" +%s)) / 86400 ))
        if [[ $expired == $skrg ]]; then W1=$R;
        elif [[ $diff -le 3 ]] && [[ $diff -gt 0 ]]; then W1=$ORG; else W1=$N; fi
        printf "   ${W1}%-5s%-15s%-15s%-15s${N}\n" "$number" "$Login" "$expired" "$jamsan"
    done
	echo -e " ${U} ═════════════════════════════════════════════════${N}"
	until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
		if [[ ${NUMBER_OF_CLIENTS} == '1' ]]; then
			read -rp "  Select one client [1]: " CLIENT_NUMBER
            if [[ ${CLIENT_NUMBER} == '0' ]]; then
                exec $0 && exit 1
            fi
		else
			read -rp "  Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
			if [[ ${CLIENT_NUMBER} == '0' ]]; then
				exec $0 && exit 1
			fi
		fi
	done
	Login=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
	cat /etc/xray/sshx/akun/log-create-${Login}.log
	cat /etc/xray/sshx/akun/log-create-${Login}.log > /etc/notifakun
	sed -i 's/\x1B\[1;37m//g' /etc/notifakun
	sed -i 's/\x1B\[0;96m//g' /etc/notifakun
	sed -i 's/\x1B\[0m//g' /etc/notifakun
	TEXT=$(cat /etc/notifakun)
	curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
	cd
	if [ ! -e /etc/tele ]; then
		echo -ne
	else
		echo "$TEXT" > /etc/notiftele
		bash /etc/tele
	fi
	read -n 1 -s -r -p "  Press any key to back on menu"
	exec $0 && exit 1
}

# HAPUS LAMA
function hapuslama(){
	clear
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U} ${N} ${O}                 ${W}● MEMBER SSH ●                 ${N}${U}${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo "USERNAME          EXP DATE          STATUS"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	while read expired; do
		AKUN="$(echo $expired | cut -d: -f1)"
		ID="$(echo $expired | grep -v nobody | cut -d: -f3)"
		exp="$(chage -l $AKUN | grep "Account expires" | awk -F": " '{print $2}')"
		status="$(passwd -S $AKUN | awk '{print $2}' )"
		if [[ $ID -ge 1000 ]]; then
			if [[ "$status" = "L" ]]; then
				printf "%-17s %2s %-17s %2s \n" "$AKUN" "$exp     " "LOCKED"
			else
				printf "%-17s %2s %-17s %2s \n" "$AKUN" "$exp     " "UNLOCKED"
			fi
		fi
	done < /etc/passwd
	JUMLAH="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo "Account number: $JUMLAH user"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo -e " ${U} ${N}${O}              ${W}● DELETE USERS ●                   ${N}${U}${N}"
	echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
	echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
	echo ""
	read -p " Username SSH to Delete : " Pengguna
	if getent passwd $Pengguna > /dev/null 2>&1; then
		userdel $Pengguna > /dev/null 2>&1
		echo -e " User $Pengguna was removed."
	else
		echo -e " Failure: User $Pengguna Not Exist."
	fi
	sed -i "/^### $Pengguna/d" /etc/xray/ssh
	read -n 1 -s -r -p "  Press any key to back on menu"
	exec $0 && exit 1
}

# CEK USER ONLINE
function cek(){
    TIMES="10"
    CHATID=$(cat /etc/per/id)
    KEY=$(cat /etc/per/token)
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    ISP=$(cat /etc/xray/isp)
    CITY=$(cat /etc/xray/city)
    domain=$(cat /etc/xray/domain)
    author=$(cat /etc/profil)
    echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
    echo -e " ${U}│${N}${O}              ${W}● SSH ACTIVE USERS ●               ${N}${U}│ ${N}"
    echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
    echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
    rm -rf /tmp/ssh2

    # Restart relevant services to force re-login and logging
    systemctl restart ws-stunnel > /dev/null 2>&1

    # Wait a bit for services to restart and users to reconnect
    sleep 3

    cat /etc/passwd | grep "/home/" | cut -d ":" -f1 > /etc/user.txt
    username1=( `cat "/etc/user.txt" `)
    i="0"
    for user in "${username1[@]}"; do
        username[$i]=`echo $user | sed 's/'\''//g'`
        jumlah[$i]=0
        i=$i+1
    done

    # Cek log Dropbear
    journalctl -u dropbear --since "5 minutes ago" | grep -i "Password auth succeeded" > /tmp/log-db.txt

    proc=( `ps aux | grep -i dropbear | awk '{print $2}'`)
    for PID in "${proc[@]}"; do
        cat /tmp/log-db.txt | grep "dropbear\[$PID\]" > /tmp/log-db-pid.txt
        NUM=`cat /tmp/log-db-pid.txt | wc -l`
        USER=`cat /tmp/log-db-pid.txt | awk '{print $10}' | sed 's/'\''//g'`
        IP=`cat /tmp/log-db-pid.txt | awk '{print $12}'`
        if [ $NUM -eq 1 ]; then
            TIME=$(date +'%H:%M:%S')
            echo "$USER $TIME : $IP" >> /tmp/ssh2
            i=0
            for user1 in "${username[@]}"; do
                if [ "$USER" == "$user1" ]; then
                    jumlah[$i]=`expr ${jumlah[$i]} + 1`
                    pid[$i]="${pid[$i]} $PID"
                fi
                i=$i+1
            done
        fi
    done

    # Cek log SSH
    journalctl -u sshd --since "5 minutes ago" | grep -i "Accepted password for" > /tmp/log-ssh.txt

    data=( `ps aux | grep "[s]shd" | grep -v grep | awk '{print $2}'`)
    for PID in "${data[@]}"; do
        cat /tmp/log-ssh.txt | grep "sshd\[$PID\]" > /tmp/log-ssh-pid.txt
        NUM=`cat /tmp/log-ssh-pid.txt | wc -l`
        USER=`cat /tmp/log-ssh-pid.txt | awk '{print $9}'`
        IP=`cat /tmp/log-ssh-pid.txt | awk '{print $11}'`
        if [ $NUM -eq 1 ]; then
            TIME=$(date +'%H:%M:%S')
            echo "$USER $TIME : $IP" >> /tmp/ssh2
            i=0
            for user1 in "${username[@]}"; do
                if [ "$USER" == "$user1" ]; then
                    jumlah[$i]=`expr ${jumlah[$i]} + 1`
                    pid[$i]="${pid[$i]} $PID"
                fi
                i=$i+1
            done
        fi
    done
    printf " ${U}%-7s${W}%-20s%-13s%-12s${U}%s\n" "│" "USERNAME" "LOGIN" "LIMIT IP" "│"
    echo -e " ├═════════════════════════════════════════════════┤"
    # Print result
    j="0"
    for i in ${!username[*]}; do
        limitip="0"
        if [[ ${jumlah[$i]} -gt $limitip ]]; then
            iplim=$(cat /etc/xray/sshx/${username[$i]}IP) > /dev/null
            sship=$(cat /tmp/ssh2 | grep -w "${username[$i]}" | wc -l)
            printf " %-7s${Y}%-20s${G}%-13s${Y}%-12s${U}%s\n" "│" "${username[$i]}" "${sship} IP" "${iplim} IP" "│"
        fi
    done

    # VPN logs
    if [ -f "/etc/openvpn/server/openvpn-tcp.log" ]; then
        cat /etc/openvpn/server/openvpn-tcp.log | grep -w "^CLIENT_LIST" | cut -d ',' -f 2,3,8 | sed -e 's/,/      /g' > /tmp/vpn-login-tcp.txt
        cat /tmp/vpn-login-tcp.txt
    fi

    if [ -f "/etc/openvpn/server/openvpn-udp.log" ]; then
        cat /etc/openvpn/server/openvpn-udp.log | grep -w "^CLIENT_LIST" | cut -d ',' -f 2,3,8 | sed -e 's/,/      /g' > /tmp/vpn-login-udp.txt
        cat /tmp/vpn-login-udp.txt
    fi
    echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
    echo -e " ${U}╭═════════════════════════════════════════════════╮${N}"
    echo -e " ${U}│${W}          CODE BY : ALAWI CONFIG-SANTRI          ${U}│${N}"
    echo -e " ${U}╰═════════════════════════════════════════════════╯${N}"
    echo
    read -n 1 -s -r -p "  Press any key to back on menu"
	exec $0 && exit 1
}


# LIMIT SSH
function limitssh(){
cd
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/xray/ssh")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
clear
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e " ${O}        ◈ Limit SSH Account ◈      ${N}"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo ""
echo " You have no existing clients!"
echo ""
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo ""
read -n 1 -s -r -p " Press any key to back on menu"
exec $0 && exit 1
fi
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e " ${O}       ◈ Limit SSH Account ◈       ${N}"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo " Pilih salah satu client untuk diatur ip-nya"
echo " ketik [0] kembali ke menu"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
printf "   %-5s%-15s%-15s\n" "NO." "NAMA" "EXPIRED"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2-3 | nl -s ') ' |awk -v OFS="\t" '{ printf "   %-5s%-15s%-15s\n", $1, $2, $3 '}
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${NUMBER_OF_CLIENTS} == '1' ]]; then
read -rp " Select one client [1]: " CLIENT_NUMBER
if [[ ${CLIENT_NUMBER} == '0' ]]; then
exec $0 && exit 1
fi
else
read -rp " Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
if [[ ${CLIENT_NUMBER} == '0' ]]; then
exec $0 && exit 1
fi
fi
done
until [[ $iplim =~ ^[0-9]+$ ]]; do
read -p " Limit User (IP) New: " iplim
done
if [ ! -e /etc/xray/sshx ]; then
mkdir -p /etc/xray/sshx
fi
if [ -z ${iplim} ]; then
iplim="0"
fi
user=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
exp=$(grep -E "^### " "/etc/xray/ssh" | cut -d ' ' -f 3 | sed -n "${CLIENT_NUMBER}"p)
echo "${iplim}" >/etc/xray/sshx/${user}IP
TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>     ☘️ RELIMIT SSH ACCOUNT ☘️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>User      :</code> <code>$user</code>
<code>Domain    :</code> <code>${domain}</code>
<code>ISP       :</code> <code>$ISP</code>
<code>CITY      :</code> <code>$CITY</code>
<code>Expired   :</code> <code>$exp</code>
<code>New Limit :</code> <code>$iplim IP</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Succes Change Limit This Account...</i>
"
curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
cd
if [ ! -e /etc/tele ]; then
echo -ne
else
echo "$TEXT" > /etc/notiftele
bash /etc/tele
fi
clear
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo " SSH Account Was Successfully Change Limit IP"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo ""
echo " Client Name : $user"
echo " Limit IP    : $iplim IP"
echo ""
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo ""
bottelegram > /dev/null 2>&1 &
read -n 1 -s -r -p " Press any key to back on menu"
exec $0 && exit 1
}
clear
function listssh(){
clear
echo -e " ${U}╭══════════════════════════════════════════╮${N}"
echo -e " ${U}│ \033[1;37mPlease select a your Choice              ${U}│${N}"
echo -e " ${U}╰══════════════════════════════════════════╯${N}"
echo -e " ${U}╭══════════════════════════════════════════╮${N}"
echo -e " ${U}│  [ 1 ]  \033[1;37mAUTO LOCKED USER SSH      ${N}"
echo -e " ${U}│  "
echo -e " ${U}│  [ 2 ]  \033[1;37mAUTO DELETE USER SSH    ${N}"
echo -e " ${U}│  "
echo -e " ${U}│  "
echo -e " ${U}│  [ 0 ]  \033[1;37mBACK TO MENU    ${N}"
echo -e " ${U}╰══════════════════════════════════════════╯${N}"
until [[ $lock =~ ^[0-2]+$ ]]; do
read -p "   Please select numbers 1 sampai 2 : " lock
done
if [[ $lock == "0" ]]; then
exec $0 && exit 1
elif [[ $lock == "1" ]]; then
clear
echo "lock" > /etc/typessh
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N} Succes Ganti Auto Lock  ${N}"
echo -e " ${U}│${N} Jika User Melanggar auto lock Account. ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
sleep 1
elif [[ $lock == "2" ]]; then
clear
echo "delete" > /etc/typessh
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N} Succes Ganti Auto Delete Accounr ${N}"
echo -e " ${U}│${N} Jika User Melanggar auto Delete Account. ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
sleep 1
fi
type=$(cat /etc/typessh)
if [ $type = "lock" ]; then
clear
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N} SILAHKAN TULIS JUMLAH WAKTU UNTUK LOCKED  ${N}"
echo -e " ${U}│${N} BISA TULIS 15 MENIT DLL. ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
read -rp "   Jumlah Waktu Lock: " -e notif2
echo "${notif2}" > /etc/waktulockssh
clear
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│ ${N} SILAHKAN TULIS JUMLAH NOTIFIKASI UNTUK AUTO LOCK    ${N}"
echo -e " ${U}│ ${N} AKUN USER YANG MULTI LOGIN     ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
read -rp "   Jika Mau 3x Notif baru kelock tulis 3, dst: " -e notif
cd /etc/xray/sshx
echo "$notif" > notif
clear
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│ ${N} SUCCES GANTI NOTIF LOCK JADI $notif ${N} "
echo -e " ${U}│ ${N} SUCCES GANTI TIME NOTIF LOCK JADI $notif2 MENIT ${N} "
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
else
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N} SILAHKAN TULIS JUMLAH WAKTU UNTUK UNTUK SCAN ${N}"
echo -e " ${U}│${N} USER YANG SEDANG MULTI LOGIN . ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
read -rp "   Tulis Waktu Scan (Menit) : " -e notif2
echo "# Autokill" >/etc/cron.d/tendang
echo "SHELL=/bin/sh" >>/etc/cron.d/tendang
echo "PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin" >>/etc/cron.d/tendang
echo "*/$notif2 * * * *  root /usr/bin/tendang" >>/etc/cron.d/tendang
clear
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│ ${N} SILAHKAN TULIS JUMLAH NOTIFIKASI UNTUK AUTO LOCK    ${N}"
echo -e " ${U}│ ${N} AKUN USER YANG MULTI LOGIN     ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
read -rp "   Jika Mau 3x Notif baru kelock tulis 3, dst: " -e notif
cd /etc/xray/sshx
echo "$notif" > notif
clear
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}           ${W}● SETTING MULTI LOGIN ●             ${N}${U}│ ${N}"
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
echo -e " ${U}╭═══════════════════════════════════════════════╮${N}"
echo -e " ${U}│ ${N} SUCCES GANTI NOTIF LOCK JADI $notif ${N} "
echo -e " ${U}│ ${N} SUCCES GANTI TIME NOTIF LOCK JADI $notif2 MENIT ${N} "
echo -e " ${U}╰═══════════════════════════════════════════════╯${N}"
fi
read -n 1 -s -r -p " Press any key to back on menu"
exec $0 && exit 1
}
function lockssh(){
clear
cd
if [ ! -e /etc/xray/sshx/listlock ]; then
echo "" > /etc/xray/sshx/listlock
fi
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/xray/sshx/listlock")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e " ${O}      ◈ Unlock SSH Account ◈       ${N}"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo ""
echo "You have no existing user Lock!"
echo ""
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
read -n 1 -s -r -p " Press any key to back on menu"
exec $0 && exit 1
fi
clear
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e " ${O}      ◈ Unlock SSH Account ◈       ${N}"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo " [*] Pilih client yang akan di-unlock"
echo " [*] Ketik [0] kembali ke menu"
echo " [*] Tulis (clear) untuk delete semua Akun"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
printf "   %-5s%-15s%-15s\n" "NO." "NAMA" "EXPIRED"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
grep -E "^### " "/etc/xray/sshx/listlock" | cut -d ' ' -f 2-3 | nl -s ') ' |awk -v OFS="\t" '{ printf "   %-5s%-15s%-15s\n", $1, $2, $3 '}
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${NUMBER_OF_CLIENTS} == '1' ]]; then
read -rp " Select one client [1]: " CLIENT_NUMBER
if [[ ${CLIENT_NUMBER} == '0' ]]; then
exec $0 && exit 1
fi
else
read -rp " Select one client [1-${NUMBER_OF_CLIENTS}] to Unlock: " CLIENT_NUMBER
if [[ ${CLIENT_NUMBER} == '0' ]]; then
exec $0 && exit 1
fi
if [[ ${CLIENT_NUMBER} == 'clear' ]]; then
rm /etc/xray/sshx/listlock
exec $0 && exit 1
fi
fi
done
user=$(grep -E "^### " "/etc/xray/sshx/listlock" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
exp=$(grep -E "^### " "/etc/xray/sshx/listlock" | cut -d ' ' -f 3 | sed -n "${CLIENT_NUMBER}"p)
pass=$(grep -E "^### " "/etc/xray/sshx/listlock" | cut -d ' ' -f 4 | sed -n "${CLIENT_NUMBER}"p)
passwd -u $user &> /dev/null
iplim=$(cat /etc/xray/sshx/${user}IP)
echo -e "### $user $exp $pass" >> /etc/xray/ssh
urut "/etc/xray/ssh"
sed -i "/^### $user $exp $pass/d" /etc/xray/sshx/listlock &> /dev/null
TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>  ☘️ SSH ACCOUNT UNLOCKED ☘️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>User    :</code> <code>$user</code>
<code>Domain  :</code> <code>${domain}</code>
<code>ISP     :</code> <code>$ISP</code>
<code>CITY    :</code> <code>$CITY</code>
<code>Limit   :</code> <code>$iplim IP</code>
<code>Expired :</code> <code>$exp</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Succes Unlock This Account...</i>
"
curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
cd
if [ ! -e /etc/tele ]; then
echo -ne
else
echo "$TEXT" > /etc/notiftele
bash /etc/tele
fi
clear
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo "  SSH Account Unlock Successfully"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo " Client Name : $user"
echo " Status      : Unlocked"
echo -e " ${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo ""
bottelegram > /dev/null 2>&1 &
read -n 1 -s -r -p " Press any key to back on menu"
exec $0 && exit 1
}

# RESTORE SSH BY AKU HEHE
function restoressh(){
    clear
    cd
    lokasi="/etc/xray/sshx/akundelete"
    if [ ! -e ${lokasi} ]; then
        echo > ${lokasi}
    fi
    clear
    NUMBER_OF_CLIENTS=$(grep -c -E "^### " "${lokasi}")
    if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
        garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        judul "      ◈ Restore SSH Account ◈      "
        garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo
        tebal "          Tidak ada user!!"
        echo
        garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        kembali
        exec $0 && exit 1
    fi
    clear
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    judul "      ◈ Restore SSH Account ◈      "
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    tebal "Please choose the client to Restore"
    tebal "ketik [0] kembali ke menu"
    tebal "ketik [000] untuk delete semua Akun"
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    printf "${W}  %-5s %-15s %s\n" "No" "Name" "Expired"
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    grep -E "^### " "${lokasi}" | cut -d ' ' -f 2-3 | nl -s ') ' | while read -r line; do
        number=$(echo "$line" | cut -d')' -f 1 | xargs); name=$(echo "$line" | cut -d' ' -f 2); expired=$(echo "$line" | cut -d' ' -f 3-)
        printf "  %-5s %-15s %s\n" "$number" "$name" "$expired"
    done
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
        if [[ ${NUMBER_OF_CLIENTS}} == '1' ]]; then
            read -rp " Select one client [1]: " CLIENT_NUMBER
            if [[ ${CLIENT_NUMBER} == '0' ]]; then
                exec $0 && exit 1
            fi
        else
            read -rp " Select one client [1-${NUMBER_OF_CLIENTS}] : " CLIENT_NUMBER
            if [[ ${CLIENT_NUMBER} == '0' ]]; then
                exec $0 && exit 1
            fi
            if [[ ${CLIENT_NUMBER} == '000' ]]; then
                rm ${lokasi}
                exec $0 && exit 1
            fi
        fi
    done
    until [[ $masaaktif =~ ^[0-9]+$ ]]; do
        read -p " Expired (days): " masaaktif
    done
    until [[ $iplim =~ ^[0-9]+$ ]]; do
        read -p " Limit User (IP) or 0 Unlimited: " iplim
    done
    if [ ${iplim} = '0' ]; then
        iplim="9999"
    fi
    user=$(grep -E "^### " "${lokasi}" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
    pass=$(grep -E "^### " "${lokasi}" | cut -d ' ' -f 4 | sed -n "${CLIENT_NUMBER}"p)
    exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
    echo -e "### $user $exp $pass" >> /etc/xray/ssh
    urut "/etc/xray/ssh"
    sed -i "/^### $user/d" ${lokasi} &> /dev/null
    echo "${iplim}" > /etc/xray/sshx/${user}IP
    useradd -e $(date -d "+$masaaktif days" +"%Y-%m-%d") -s /bin/false -M $user
    echo -e "$pass\n$pass\n" | passwd $user &> /dev/null
    cat > /home/vps/public_html/ssh-$user.txt <<-END
-------------------------------------------
Format SSH OVPN Account
-------------------------------------------
Username         : $user
Password         : $pass
Expired          : $exp
-------------------------------------------
Host             : $domain
ISP              : $ISP
CITY             : $CITY
Login Limit      : ${iplim} IP
Port OpenSSH     : 22
Port Dropbear    : 143, 109
Port SSH WS      : 80, 8080
Port SSH SSL WS  : 443
Port SSL/TLS     : 8443, 8880
Port OVPN WS SSL : 2086
Port OVPN SSL    : 990
Port OVPN TCP    : 1194
Port OVPN UDP    : 2200,
BadVPN UDP       : 7100, 7300, 7300
-------------------------------------------
SSH UDP VIRAL    : $domain:1-65535@$user:$pass
-------------------------------------------
HTTP COSTUM      : $domain:80@$user:$pass
-------------------------------------------
Payload WS/WSS   :
GET / HTTP/1.1[crlf]Host: [host][crlf]Connection: Upgrade[crlf]User-Agent: [ua][crlf]Upgrade: ws[crlf][crlf]
-------------------------------------------
OpenVPN SSL      : http://$domain:89/ssl.ovpn
OpenVPN TCP      : http://$domain:89/tcp.ovpn
OpenVPN UDP      : http://$domain:89/udp.ovpn
-------------------------------------------
END
    TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>☘️ SSH ACCOUNT RESTORE ☘️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<code>User     :</code> <code>$user</code>
<code>Domain   :</code> <code>${domain}</code>
<code>ISP      :</code> <code>$ISP</code>
<code>CITY     :</code> <code>$CITY</code>
<code>IP Limit :</code> <code>$iplim IP</code>
<code>Expired  :</code> <code>$exp</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>Succes Restore This Account...</i>
"
    curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
    cd
    if [ ! -e /etc/tele ]; then
        echo -ne
    else
        echo "$TEXT" > /etc/notiftele
        bash /etc/tele
    fi
    clear
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    judul " SSH Account Restore Successfully! "
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    tebal "DOMAIN   : $domain"
    tebal "ISP      : $ISP"
    tebal "USERNAME : $user"
    tebal "IP LIMIT : $iplim IP"
    tebal "EXPIRED  : $exp"
    tebal "Succes to Restore"
    garis "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo
    bottelegram > /dev/null 2>&1 &
    kembali
    exec $0 && exit 0
}

clear
author=$(cat /etc/profil)
echo -e " ${U}╭════════════════════════════════════════════════════╮${N}"
echo -e " ${U}│${N}${O}                 ${W}● SSH PANEL MENU ●                 ${N}${U}│${N}"
echo -e " ${U}╰════════════════════════════════════════════════════╯${N}"
echo -e " ${U}╭════════════════════════════════════════════════════╮${N}"
echo -e " ${U}│ ${N}${W}[${U}01${W}]${N} ${U}● ${W}ADD AKUN${N}        ${W}[${U}05${W}]${N} ${U}● ${W}CEK USER ONLINE${N}      ${U}│${N}"
echo -e " ${U}│ ${N}${W}[${U}02${W}]${N} ${U}● ${W}TRIAL AKUN${N}      ${W}[${U}06${W}]${N} ${U}● ${W}CEK USER CONFIG${N}      ${U}│${N}"
echo -e " ${U}│ ${N}${W}[${U}03${W}]${N} ${U}● ${W}RENEW AKUN${N}      ${W}[${U}07${W}]${N} ${U}● ${W}CHANGE IP LIMIT${N}      ${U}│${N}"
echo -e " ${U}│ ${N}${W}[${U}04${W}]${N} ${U}● ${W}DELETE AKUN${N}     ${W}[${U}08${W}]${N} ${U}● ${W}SETTING LOCK LOGIN${N}   ${U}│${N}"
echo -e " ${U}│ ${N}${W}[${U}00${W}]${N} ${U}● ${W}GO BACK${N}         ${W}[${U}09${W}]${N} ${U}● ${W}UNLOCK LOGIN${N}        ${U} │${N}"
echo -e " ${U}╰════════════════════════════════════════════════════╯${N}"
echo -e " ${U}╭══════════════════════${W} ● BY${N} ● ${U}══════════════════════╮${N}"
cetak_judul
echo -e " ${U}╰════════════════════════════════════════════════════╯${N}"
echo -ne "  ${W}Select menu ${U}: ${W}"; read opt
case $opt in
    01 | 1) clear ; usernew ; exit 0 ;;
    02 | 2) clear ; trial ; exit 0 ;;
    03 | 3) clear ; renew ; exit 0 ;;
    04 | 4) clear ; hapus ; exit 0 ;;
    05 | 5) clear ; cek ; exit 0 ;;
    06 | 6) clear ; cekconfig ; exit 0 ;;
    07 | 7) clear ; limitssh; exit 0 ;;
    08 | 8) clear ; listssh ; exit 0 ;;
    09 | 9) clear ; lockssh ; exit 0 ;;
    10 | 10) clear ; restoressh ; exit 0 ;;
    00 | 0) clear ; exec menu ; exit 0 ;;
    x) exit 0 ;;
    *) echo -e "  ${R}Input is not valid!${N}" ; sleep 1 ; exec $0 ; exit 0 ;;
esac
exit 0

#!/bin/bash
exit_clean() { echo " Dihentikan"; exit 0; }
trap exit_clean SIGINT
REPOKU="https://izin.vmessh.cloud"
REPOSC="https://iam.scvpn.cloud"
dateFromServer=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
biji=`date +"%Y-%m-%d" -d "$dateFromServer"`
colornow=$(cat /etc/alawivpn/theme/color.conf)
NC="\e[0m"
RED="\033[0;31m"
COLOR1="$(cat /etc/alawivpn/theme/$colornow | grep -w "TEXT" | cut -d: -f2|sed 's/ //g')"
COLBG1="$(cat /etc/alawivpn/theme/$colornow | grep -w "BG" | cut -d: -f2|sed 's/ //g')"
WH='\033[1;37m'
ipsaya=$(wget -qO- ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="${REPOKU}/registrasi.txt"
checking_sc() {
    useexp=$(curl -sS "$data_ip" | grep "$ipsaya" | awk '{print $3}')
    [[ "$date_list" > "$useexp" ]] && { systemctl stop nginx kyt xray ws-stunnel; dilarang; exit 1; }
}
checking_sc
cd
ipsaya=$(wget -qO- ipv4.icanhazip.com)
cd /etc
nmap -p 22 $ipsaya > cekip
cpu=$(grep -c -E "open" "cekip")
if [[ ${cpu} == '0' ]]; then
	apt install nmap -y
	shutdown -r now
fi
cd
today=$(date -d "0 days" +"%Y-%m-%d")
Exp2=$(curl -sS ${REPOKU}/registrasi.txt | grep $ipsaya | awk '{print $3}')
d1=$(date -d "$Exp2" +%s)
d2=$(date -d "$today" +%s)
certificate=$(( (d1 - d2) / 86400 ))
echo "$certificate Hari" > /etc/scdurasi
vnstat_profile=$(vnstat | sed -n '3p' | awk '{print $1}' | grep -o '[^:]*')
vnstat -i ${vnstat_profile} >/etc/t1
bulan=$(date +%b)
tahun=$(date +%y)
ba=" "
if [ "$(grep -wc ${bulan} /etc/t1)" != '0' ]; then
	bulan=$(date +%b)
	month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $6}')
	month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $7}')
else
	bulan2=$(date +%Y-%m)
	month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $5}')
	month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $6}')
fi
echo "$month_tx $month_txv" > /etc/usage2
xray2=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
if [[ $xray2 == "running" ]]; then
	echo -ne
else
	systemctl restart xray
	systemctl start xray
fi
nginx2=$( systemctl status nginx | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $nginx2 == "running" ]]; then
	echo -ne
else
	systemctl restart nginx
	systemctl start nginx
fi
cd
if [[ -e /usr/bin/kyt ]]; then
	nginx=$( systemctl status kyt | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
	if [[ $nginx == "running" ]]; then
		echo -ne
	else
		systemctl restart kyt
		systemctl start kyt
	fi
	kyt=$( systemctl status kyt | grep "TERM" | wc -l )
	if [[ $kyt == "0" ]]; then
		echo -ne
	else
		systemctl restart kyt
		systemctl start kyt
	fi
fi
stunnel=$( systemctl status ws-stunnel | grep "Errno" | wc -l )
if [[ $stunnel == "0" ]]; then
	echo -ne
else
	systemctl restart ws-stunnel
	systemctl start ws-stunnel
fi
stunnel2=$( systemctl status ws-stunnel | grep "TERM" | wc -l )
if [[ $stunnel2 == "0" ]]; then
	echo -ne
else
	systemctl restart ws-stunnel
	systemctl start ws-stunnel
fi
xrray=$( systemctl status xray | grep "error" | wc -l )
if [[ $xrray == "0" ]]; then
	echo -ne
else
	systemctl restart xray
	systemctl start xray
	systemctl restart nginx
	systemctl start nginx
fi
bash2=$( pgrep bash | wc -l )
if [[ $bash2 -gt "20" ]]; then
	killall bash
fi
exit 0

#!/bin/bash
exit_clean() { echo " Dihentikan"; exit 0; }
trap exit_clean SIGINT
REPOKU="https://github.com/optimus-glitch/newsc/main"
REPOSC="https://github.com/optimus-glitch/newsc/main"
biji=`date +"%Y-%m-%d" -d "$dateFromServer"`
colornow=$(cat /etc/alawivpn/theme/color.conf)
NC="\e[0m"
RED="\033[0;31m"
COLOR1="$(cat /etc/alawivpn/theme/$colornow | grep -w "TEXT" | cut -d: -f2|sed 's/ //g')"
COLBG1="$(cat /etc/alawivpn/theme/$colornow | grep -w "BG" | cut -d: -f2|sed 's/ //g')"
WH='\033[1;37m'
ipsaya=$(wget -qO- ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="${REPOKU}/registrasi.txt"
checking_sc() {
    useexp=$(curl -sS "$data_ip" | grep "$ipsaya" | awk '{print $3}')
    [[ "$date_list" > "$useexp" ]] && { systemctl stop nginx kyt xray ws-stunnel; dilarang; exit 1; }
}
checking_sc
rm -rf /tmp/ssh
clear
bash2=$( pgrep bash | wc -l )
if [[ $bash2 -gt "20" ]]; then
	killall bash
fi
TIMES="10"
CHATID=$(cat /etc/perlogin/id)
KEY=$(cat /etc/perlogin/token)
URL="https://api.telegram.org/bot$KEY/sendMessage"
domain=`cat /etc/xray/domain`
DATE=$(date +'%Y-%m-%d')
TIME=$(date +'%H:%M:%S')
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
author=$(cat /etc/profil)
type=$(cat /etc/typessh)
waktulock=$(cat /etc/waktulockssh)
if [[ -z ${waktulock} ]]; then
	echo "15" > /etc/waktulockssh
fi
if [[ -z ${type} ]]; then
	echo "delete" > /etc/typessh
fi
MAX=$limitip
if [ -e "/var/log/auth.log" ]; then
	OS=1;
	LOG="/var/log/auth.log";
fi
if [ -e "/var/log/secure" ]; then
	OS=2;
	LOG="/var/log/secure";
fi
if [ $OS -eq 1 ]; then
	service sshd restart > /dev/null 2>&1;
fi
if [ $OS -eq 2 ]; then
	service sshd restart > /dev/null 2>&1;
fi
service dropbear restart > /dev/null 2>&1;
if [[ ${1+x} ]]; then
	MAX=$limitip;
fi
cat /etc/passwd | grep "/home/" | cut -d":" -f1 > /etc/user.txt
username1=( `cat "/etc/user.txt" `);
i="0";
for user in "${username1[@]}"; do
	username[$i]=`echo $user | sed 's/'\''//g'`;
	jumlah[$i]=0;
	i=$i+1;
done
cat $LOG | grep -i dropbear | grep -i "Password auth succeeded" > /tmp/log-db.txt
proc=( `ps aux | grep -i dropbear | awk '{print $2}'`);
for PID in "${proc[@]}"; do
	cat /tmp/log-db.txt | grep "dropbear\[$PID\]" > /tmp/log-db-pid.txt
	NUM=`cat /tmp/log-db-pid.txt | wc -l`;
	USER=`cat /tmp/log-db-pid.txt | awk '{print $10}' | sed 's/'\''//g'`;
	IP=`cat /tmp/log-db-pid.txt | awk '{print $12}'`;
	if [ $NUM -eq 1 ]; then
		TIME=$(date +'%H:%M:%S')
		echo "$USER $TIME : $IP" >>/tmp/ssh
		i=0;
		for user1 in "${username[@]}"; do
			if [ "$USER" == "$user1" ]; then
				jumlah[$i]=`expr ${jumlah[$i]} + 1`;
				pid[$i]="${pid[$i]} $PID"
			fi
			i=$i+1;
		done
	fi
done
cat $LOG | grep -i sshd | grep -i "Accepted password for" > /tmp/log-db.txt
data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);
for PID in "${data[@]}"; do
	cat /tmp/log-db.txt | grep "sshd\[$PID\]" > /tmp/log-db-pid.txt;
	NUM=`cat /tmp/log-db-pid.txt | wc -l`;
	USER=`cat /tmp/log-db-pid.txt | awk '{print $9}'`;
	IP=`cat /tmp/log-db-pid.txt | awk '{print $11}'`;
	if [ $NUM -eq 1 ]; then
		TIME=$(date +'%H:%M:%S')
		echo "$USER $TIME : $IP" >>/tmp/ssh
		i=0;
		for user1 in "${username[@]}"; do
			if [ "$USER" == "$user1" ]; then
				jumlah[$i]=`expr ${jumlah[$i]} + 1`;
				pid[$i]="${pid[$i]} $PID"
			fi
			i=$i+1;
		done
	fi
done
j="0";
for i in ${!username[*]}; do
	limitip=$(cat /etc/xray/sshx/${username[$i]}IP)
	if [[ ${jumlah[$i]} -gt $limitip ]]; then
		date=`date +"%Y-%m-%d %X"`;
		echo "$date - ${username[$i]} - ${jumlah[$i]}" >> /etc/xray/sshx/${username[$i]}login;
		sship=$(cat /etc/xray/sshx/${username[$i]}login | wc -l)
		sship2=$(grep -w "${username[$i]}" /tmp/ssh | cut -d ' ' -f 2-4 | awk '{$1=$1;print}' | nl -w 1 -s '. ')
		ssssh1=$(ls "/etc/xray/sshx" | grep -w "notif")
		if [[ -z ${sssh1} ]]; then
			ssssh="3"
		else
			ssssh=$(cat /etc/xray/sshx/notif)
		fi
    	if [ $sship = $ssssh ]; then
	    	if [ $type = "delete" ]; then
		    	yangmulti="${username[$i]}"
                multiuser=$(echo $yangmulti | cut -c 1-3)
                TEXT2="
━━━━━━━━━━━━━━━━━━━━━━━
<b>         ⚠️ SSH MULTI LOGIN ⚠️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<b>User :</b> <code>${multiuser}⬤⬤⬤</code>
<b>Domain :</b> <code>${domain}</code>
<b>ISP :</b> <code>${ISP}</code>
<b>City :</b> <code>$CITY</code>
<b>Limit Login :</b> <code>$limitip</code>
<b>Total Login :</b> <code>${jumlah[$i]}</code>
━━━━━━━━━━━━━━━━━━━━━━━
<b>TIME LOGIN : IP LOGIN </b>
<code>$sship2</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>${ssssh}x Multi-Login akun dikunci otomatis...</i>
"
    			sed -i "/${username[$i]}/d" /var/log/auth.log
	    		curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT2&parse_mode=html" $URL >/dev/null
		    	cd
                waktu=$(date +'%H:%M:%S')
    			exp=$(grep -i "### ${username[$i]}" "/etc/xray/ssh" | cut -d ' ' -f 3 | sort | uniq)
	    		pass=$(grep -i "### ${username[$i]}" "/etc/xray/ssh" | cut -d ' ' -f 4 | sort | uniq)
		    	echo "### ${username[$i]} $exp $pass $waktu" >> /etc/xray/sshx/listlock
                urut "/etc/xray/sshx/listlock"
    			passwd -l ${username[$i]}
	    		sed -i "/${username[$i]}/d" /etc/xray/ssh
		    	cd
			    rm -rf /etc/xray/sshx/${username[$i]}login
    			systemctl restart ws-stunnel > /dev/null 2>&1
	    		systemctl restart ws-dropbear > /dev/null 2>&1
		    fi
    		if [ $type = "lock" ]; then
	    		yangmulti="${username[$i]}"
                multiuser=$(echo $yangmulti | cut -c 1-3)
TEXT2="
━━━━━━━━━━━━━━━━━━━━━━━
<b>         ⚠️ SSH MULTI LOGIN ⚠️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<b>User :</b> <code>${multiuser}⬤⬤⬤</code>
<b>Domain :</b> <code>${domain}</code>
<b>ISP :</b> <code>${ISP}</code>
<b>City :</b> <code>$CITY</code>
<b>Limit Login :</b> <code>$limitip</code>
<b>Total Login :</b> <code>${jumlah[$i]}</code>
━━━━━━━━━━━━━━━━━━━━━━━
<b>TIME LOGIN : IP LOGIN </b>
<code>$sship2</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>${ssssh}x Multi Login Lock Account $waktulockssh Minutes...</i>
"
			    sed -i "/${username[$i]}/d" /var/log/auth.log
    			curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT2&parse_mode=html" $URL >/dev/null
	    		cd
		    	waktu=$(date +'%H:%M:%S')
                exp=$(grep -i "### ${username[$i]}" "/etc/xray/ssh" | cut -d ' ' -f 3 | sort | uniq)
    			pass=$(grep -i "### ${username[$i]}" "/etc/xray/ssh" | cut -d ' ' -f 4 | sort | uniq)
	    		echo "### ${username[$i]} $exp $pass $waktu" >> /etc/xray/sshx/listlock
                urut "/etc/xray/sshx/listlock"
			    passwd -l ${username[$i]}
    			cd
	    		rm -rf /etc/xray/sshx/${username[$i]}login
		    	systemctl restart ws-stunnel > /dev/null 2>&1
			    restart service cron > /dev/null 2>&1
    		fi
		else
			yangmulti="${username[$i]}"
			multiuser=$(echo $yangmulti | cut -c 1-3)
TEXT="
━━━━━━━━━━━━━━━━━━━━━━━
<b>         ⚠️ SSH MULTI LOGIN ⚠️</b>
━━━━━━━━━━━━━━━━━━━━━━━
<b>User :</b> <code>${multiuser}⬤⬤⬤</code>
<b>Domain :</b> <code>${domain}</code>
<b>ISP :</b> <code>${ISP}</code>
<b>City :</b> <code>$CITY</code>
<b>Limit Login :</b> <code>$limitip</code>
<b>Total Login :</b> <code>${jumlah[$i]}</code>
━━━━━━━━━━━━━━━━━━━━━━━
<b>TIME LOGIN : IP LOGIN </b>
<code>$sship2</code>
━━━━━━━━━━━━━━━━━━━━━━━
<i>${sship}x Multi-Login : ${ssssh}x Multi-Login Auto Lock Account...</i>
"
			sed -i "/${username[$i]}/d" /var/log/auth.log
			curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
		fi
		if [ $sship -gt $ssssh ]; then
            waktu=$(date +'%H:%M:%S')
			exp=$(grep -i "### ${username[$i]}" "/etc/xray/ssh" | cut -d ' ' -f 3 | sort | uniq)
			pass=$(grep -i "### ${username[$i]}" "/etc/xray/ssh" | cut -d ' ' -f 4 | sort | uniq)
			echo "### ${username[$i]} $exp $pass $waktu" >> /etc/xray/sshx/listlock
            urut "/etc/xray/sshx/listlock"
			passwd -l ${username[$i]}
			sed -i "/${username[$i]}/d" /etc/xray/ssh
			cd
			rm -rf /etc/xray/sshx/${username[$i]}login
			systemctl restart ws-stunnel > /dev/null 2>&1
			systemctl restart ws-dropbear > /dev/null 2>&1
		fi
		j=`expr $j + 1`;
	fi
done
if [ $j -gt 0 ]; then
	if [ $OS -eq 1 ]; then
		service ssh restart > /dev/null 2>&1;
	fi
	if [ $OS -eq 2 ]; then
		service sshd restart > /dev/null 2>&1;
	fi
	service dropbear restart > /dev/null 2>&1;
	j=0;
fi
exit 0
